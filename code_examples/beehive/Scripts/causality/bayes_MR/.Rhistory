load("~/Desktop/Project/scratch/genotPCs/5genotPCs.RData")
View(pc_data)
library(ggplot2)
qplot(pc_data$PC1, pc_data$PC2)
load("~/Desktop/Project/scratch/genotPCs/5genotPCs.RData")
qplot(pc_data$PC1, pc_data$PC2, col=RACE)
qplot(pc_data$PC1, pc_data$PC2, col=pc_data$RACE)
max(pc_data$RACE)
unique(pc_data$RACE)
qplot(pc_data$PC1, pc_data$PC2, factor=pc_data$RACE)
qplot(pc_data$PC1, pc_data$PC2, fille=pc_data$RACE)
qplot(pc_data$PC1, pc_data$PC2, fill=pc_data$RACE)
qplot(pc_data$PC1, pc_data$PC2, col=pc_data$RACE)
which(pc_data$RACE == 99)
pc_data[which(pc_data$RACE == 99),]
pc_data[which(pc_data$RACE == 99),'RACE'] = 0
unique(pc_data$RACE)
qplot(pc_data$PC1, pc_data$PC2, col=pc_data$RACE)
qplot(pc_data$PC1, pc_data$PC2, col=pc_data$RACE) + scale_color_manual(values = c('grey', 'red', 'blue', 'green','yellow' ))
qplot(pc_data$PC1, pc_data$PC2, col=facdtor(pc_data$RACE)) + scale_color_manual(values = c('grey', 'red', 'blue', 'green','yellow'))
qplot(pc_data$PC1, pc_data$PC2, col=factor(pc_data$RACE)) + scale_color_manual(values = c('grey', 'red', 'blue', 'green','yellow'))
qplot(pc_data$PC2, pc_data$PC3, col=factor(pc_data$RACE)) + scale_color_manual(values = c('grey', 'red', 'blue', 'green','yellow'))
qplot(pc_data$PC2, pc_data$PC4, col=factor(pc_data$RACE)) + scale_color_manual(values = c('grey', 'red', 'blue', 'green','yellow'))
qplot(pc_data$PC1, pc_data$PC4, col=factor(pc_data$RACE)) + scale_color_manual(values = c('grey', 'red', 'blue', 'green','yellow'))
qplot(pc_data$PC1, pc_data$PC2, col=factor(pc_data$RACE)) + scale_color_manual(values = c('grey', 'red', 'blue', 'green','yellow'))
qplot(pc_data$PC1, pc_data$PC3, col=factor(pc_data$RACE)) + scale_color_manual(values = c('grey', 'red', 'blue', 'green','yellow'))
qplot(pc_data$PC2, pc_data$PC3, col=factor(pc_data$RACE)) + scale_color_manual(values = c('grey', 'red', 'blue', 'green','yellow'))
qplot(pc_data$PC1, pc_data$PC3, col=factor(pc_data$RACE)) + scale_color_manual(values = c('grey', 'red', 'blue', 'green','yellow'))
qplot(pc_data$PC1, pc_data$PC4, col=factor(pc_data$RACE)) + scale_color_manual(values = c('grey', 'red', 'blue', 'green','yellow'))
qplot(pc_data$PC3, pc_data$PC4, col=factor(pc_data$RACE)) + scale_color_manual(values = c('grey', 'red', 'blue', 'green','yellow'))
qplot(pc_data$PC1, pc_data$PC5, col=factor(pc_data$RACE)) + scale_color_manual(values = c('grey', 'red', 'blue', 'green','yellow'))
qplot(pc_data$PC3, pc_data$PC5, col=factor(pc_data$RACE)) + scale_color_manual(values = c('grey', 'red', 'blue', 'green','yellow'))
kmeans(clust = kmeans(pc_data[,c(1:5)], centers = 3))
clust = kmeans(pc_data[,c(1:5)], centers = 3)
View(clust)
clust
clust$cluster
clust
clust$centers
clust$totss
clust$size
clust$ifault
clust$iter
pam
library(fpc)
install.packages(fpc)
install.packages('fpc')
library(fpc)
pamk(data = pc_data[,c(1:5)])
clust = pamk(data = pc_data[,c(1:5)])
clust$pamobject$medoids
clust$pamobject$clusinfo
clust$pamobject$clustering
clust$pamobject$medoids
library(mclust)
clust = Mclust(pc_data[,c(1:5)])
summary(clust)
summary(clust, parameters = T)
clust = Mclust(pc_data[,c(1:5)], G = 3:5)
summary(clust, parameters = T)
plot(clust, what = "scatterplot")
plot.Mclust(clust, what = "scatterplot")
plot.Mclust(clust)
plot.Mclust(clust)
plot.Mclust(clust)
plot(clust)
clust = Mclust(pc_data[,c(1:5)], G = 3)
plot(clust)
clust = Mclust(pc_data[,c(1:5)])
plot(clust)
clust = Mclust(pc_data[,c(1:5)], G=5)
plot(clust)
clust = Mclust(pc_data[,c(1:5)])
plot(clust)
summary(clust)
summary(clust, parameters = T)
load("~/Desktop/Project/scratch/genotPCs/5genotPCs.RData")
library(mclust)
clust = Mclust(pc_data[,c(1:5)])
plot(clust)
summary(clust)
summary(clust, parameters = T)
plot(clust)
clust
clust$classification
summary(clust, parameters = T)
summary(clust)
clust = Mclust(pc_data[,c(1:5)])
summary(clust)
library(mclust)
update.packages('mclust')
library(mclust)
clust = Mclust(pc_data[,c(1:5)])
summary(clust)
setwd("~/Desktop/Project/RNAseq_pipeline/Scripts/causality/bayes_MR")
load("~/Desktop/Project/RNAseq_pipeline/Scripts/causality/bayes_MR/.RData")
length(AA_list)
dim(covars)
dim(expression_matrix)
dim(genotype_matrix)
sapply(AA_list, function(x) {x %in% colnames(expression_matrix)})
AA_list = AA_list[sapply(AA_list, function(x) {x %in% colnames(expression_matrix)})]
EA_list = EA_list[sapply(EA_list, function(x) {x %in% colnames(expression_matrix)})]
length(AA_list)
length(EA_list)
86+583
706-669
i = 1
snp = rownames(genotype_matrix)[i]
snp
inds = !is.na(genotype_matrix[snp,])
sum(inds)
dim(gene_positions)
is.na(NA)
snp
head(snp_positions)
head(gene_positions)
snp_positions[i,'pos']
sapply(rownames(gene_positions), function(x) {(gene_positions[x, 'chr'] == paste0('chr', chr_number)) && (gene_positions[x, 'start'] - cis_threshold <= snp_positions[i,'pos'] && gene_positions[x, 'end'] + cis_threshold >= snp_positions[i,'pos'])})
cis_gene_list = gene_positions[gene_positions[x, 'chr'] == paste0('chr', chr_number,]
cis_gene_list = gene_positions[(gene_positions[x, 'chr'] == paste0('chr', chr_number),]
cis_gene_list = gene_positions[(gene_positions$chr == paste0('chr', chr_number),]
cis_gene_list = gene_positions[(gene_positions$chr == paste0('chr', chr_number),]
(gene_positions$chr == paste0('chr', chr_number)
)
(gene_positions$chr == paste0('chr', chr_number))
cis_gene_list = gene_positions[gene_positions[x, 'chr'] == paste0('chr', chr_number),]
cis_gene_list = gene_positions[gene_positions$chr == paste0('chr', chr_number),]
cis_gene_pos = gene_positions[gene_positions$chr == paste0('chr', chr_number),]
head(cis_gene_pos)
head(gene_positions)
head(expression_matrix)
